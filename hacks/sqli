SQL Injection

==BASIC SQL INJECTION==

#1 First check if sql injectible
(look out for any outputs being given and if your injected code is seen)
' or 1=1
' or 1=1 --
1 or 1=1
1 or 1=1 --

Level 1 (U can see the result of your sqli):
Mainly three types of sqli:
	1. In-band 
		2. Error-based
		3. union-based 

Level 2 (No results visible): Blind injection

	Level 3 (Boolean based)

	Level 4 (Time based) = sleep() and all if there is a time bound retrieving way of finding out if the injection is success

#2 Check how many values are fetched or returned by the current query or find the number of columns in the table

UNION select 1,2,3...... till errors

only when you use union select bcoz:
	When the DB receives Q1 UNION Q2 it roughly does:

	1. Parse & validate both SELECTs: SQL parser ensures both are valid SQL.

	2. Column-count and type checking: the engine confirms both selects *return the same number of columns* and checks compatibility/implicit casts.

	3. Execute each SELECT separately (the database optimizer may choose interleaved strategies internally, but logically both result sets are computed).

	4. Combine rows by position: produce a single result set where each row from Q1 and each row from Q2 appear in the combined output.

	5. Apply UNION semantics: if plain UNION, duplicates are removed (a sort/dedup step); if UNION ALL, rows are concatenated without dedup.

	6. Apply final clauses: ORDER BY, LIMIT (if present) are applied to the final combined result â€” note ORDER BY refers to final columns (often by position or alias from the first select).

#3 Understand the structure:

1. database(): tells you which db you are in
2. information_schema.tables where table_schema="  val from 1."
3. Then check for columns in info_schema.cols for whichever table in the db



==ADVANCED SQL INJECTION==